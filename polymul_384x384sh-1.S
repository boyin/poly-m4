#include "red-asm.h"
	.p2align	2,,3	
	.syntax		unified
	.text
// void convert_2p19 (r0 = dst, r1 = src, r12 = length) 
convert_2p19:
convert_2p19_0:
	ldrsh.w	r2, [r1], #2
	ldr.w	r3, [r1], #4
	ldr.w	r4, [r1], #4
	ldr.w	r5, [r1], #4
	ldr.w	r6, [r1], #4
	ldr.w	r7, [r1], #4
	ldr.w	r8, [r1], #4
	ldr.w	r9, [r1], #4
	ldrsh.w	r10, [r1], #2
	add.w	r2, r2, r3, LSL #19
	asr.w	r3, r3, #16
	add.w	r3, r3, r4, LSL #19
	asr.w	r4, r4, #16
	add.w	r4, r4, r5, LSL #19
	asr.w	r5, r5, #16
	add.w	r5, r5, r6, LSL #19
	asr.w	r6, r6, #16
	add.w	r6, r6, r7, LSL #19
	asr.w	r7, r7, #16
	add.w	r7, r7, r8, LSL #19
	asr.w	r8, r8, #16
	add.w	r8, r8, r9, LSL #19
	asr.w	r9, r9, #16
	add.w	r9, r9, r10, LSL #19
	stm.w	r0!, {r2-r9}
	subs.w	r12, #16
	bhi.w	convert_2p19_0
	bx	lr
	nop
	
// void gf_polymul_384x384sh (int *h, int *f, int *g);
	.p2align	2,,3	
	.syntax		unified
	.text
	.global gf_polymul_384x384sh
	.type	gf_polymul_384x384sh, %function
gf_polymul_384x384sh:
	push.w	{r4-r11,lr}
	movw.w	r14, #47521
	movt.w	r14, #65522
	vmov.w	s11, r14		// save q32inv
	vmov.w	s0, r0		// save h
	vmov.w	s3, r0		// save hh
	vmov.w	s2, r1		// save f
	vmov.w	s1, r2		// save g
	sub.w	sp, sp, #1536	// space for ff,gg
	add.w	r0, sp, #0	// load ff
	mov.w	r12, #384	// load N
	bl.w	convert_2p19
	add.w	r0, sp, #768	// load gg
	vmov.w	r1, s1		// load g
	mov.w	r12, #384	// load N
	bl.w	convert_2p19
sch2p19_0:			// increasing thread length
	add.w	r1, sp, #768	// load gg+2*0
	add.w	r0, sp, #0	// load ff
	// block (0,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	asr.w	r8, r11, #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #776	// load gg+2*1
	add.w	r0, sp, #0	// load ff
	// block (0,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #784	// load gg+2*2
	add.w	r0, sp, #0	// load ff
	// block (0,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #792	// load gg+2*3
	add.w	r0, sp, #0	// load ff
	// block (0,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #800	// load gg+2*4
	add.w	r0, sp, #0	// load ff
	// block (0,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #808	// load gg+2*5
	add.w	r0, sp, #0	// load ff
	// block (0,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #816	// load gg+2*6
	add.w	r0, sp, #0	// load ff
	// block (0,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #824	// load gg+2*7
	add.w	r0, sp, #0	// load ff
	// block (0,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #832	// load gg+2*8
	add.w	r0, sp, #0	// load ff
	// block (0,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #840	// load gg+2*9
	add.w	r0, sp, #0	// load ff
	// block (0,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #848	// load gg+2*10
	add.w	r0, sp, #0	// load ff
	// block (0,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #856	// load gg+2*11
	add.w	r0, sp, #0	// load ff
	// block (0,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #864	// load gg+2*12
	add.w	r0, sp, #0	// load ff
	// block (0,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #872	// load gg+2*13
	add.w	r0, sp, #0	// load ff
	// block (0,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #880	// load gg+2*14
	add.w	r0, sp, #0	// load ff
	// block (0,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #888	// load gg+2*15
	add.w	r0, sp, #0	// load ff
	// block (0,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #896	// load gg+2*16
	add.w	r0, sp, #0	// load ff
	// block (0,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #904	// load gg+2*17
	add.w	r0, sp, #0	// load ff
	// block (0,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #912	// load gg+2*18
	add.w	r0, sp, #0	// load ff
	// block (0,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #920	// load gg+2*19
	add.w	r0, sp, #0	// load ff
	// block (0,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (14,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #928	// load gg+2*20
	add.w	r0, sp, #0	// load ff
	// block (0,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (14,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #936	// load gg+2*21
	add.w	r0, sp, #0	// load ff
	// block (0,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #944	// load gg+2*22
	add.w	r0, sp, #0	// load ff
	// block (0,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #952	// load gg+2*23
	add.w	r0, sp, #0	// load ff
	// block (0,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #960	// load gg+2*24
	add.w	r0, sp, #0	// load ff
	// block (0,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #968	// load gg+2*25
	add.w	r0, sp, #0	// load ff
	// block (0,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #976	// load gg+2*26
	add.w	r0, sp, #0	// load ff
	// block (0,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (14,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #984	// load gg+2*27
	add.w	r0, sp, #0	// load ff
	// block (0,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (14,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #992	// load gg+2*28
	add.w	r0, sp, #0	// load ff
	// block (0,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (28,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1000	// load gg+2*29
	add.w	r0, sp, #0	// load ff
	// block (0,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (28,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1008	// load gg+2*30
	add.w	r0, sp, #0	// load ff
	// block (0,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (28,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1016	// load gg+2*31
	add.w	r0, sp, #0	// load ff
	// block (0,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (28,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1024	// load gg+2*32
	add.w	r0, sp, #0	// load ff
	// block (0,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (28,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1032	// load gg+2*33
	add.w	r0, sp, #0	// load ff
	// block (0,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (14,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (28,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1040	// load gg+2*34
	add.w	r0, sp, #0	// load ff
	// block (0,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (14,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (28,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1048	// load gg+2*35
	add.w	r0, sp, #0	// load ff
	// block (0,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (28,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1056	// load gg+2*36
	add.w	r0, sp, #0	// load ff
	// block (0,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (28,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1064	// load gg+2*37
	add.w	r0, sp, #0	// load ff
	// block (0,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (28,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1072	// load gg+2*38
	add.w	r0, sp, #0	// load ff
	// block (0,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (28,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1080	// load gg+2*39
	add.w	r0, sp, #0	// load ff
	// block (0,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (28,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1088	// load gg+2*40
	add.w	r0, sp, #0	// load ff
	// block (0,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (14,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (28,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1096	// load gg+2*41
	add.w	r0, sp, #0	// load ff
	// block (0,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (14,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (28,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1104	// load gg+2*42
	add.w	r0, sp, #0	// load ff
	// block (0,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (28,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (42,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1112	// load gg+2*43
	add.w	r0, sp, #0	// load ff
	// block (0,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (28,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (42,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1120	// load gg+2*44
	add.w	r0, sp, #0	// load ff
	// block (0,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (28,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (42,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1128	// load gg+2*45
	add.w	r0, sp, #0	// load ff
	// block (0,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (28,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (42,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1136	// load gg+2*46
	add.w	r0, sp, #0	// load ff
	// block (0,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (28,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (42,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1144	// load gg+2*47
	add.w	r0, sp, #0	// load ff
	// block (0,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (14,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (28,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (42,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1152	// load gg+2*48
	add.w	r0, sp, #0	// load ff
	// block (0,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (14,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (28,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (42,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1160	// load gg+2*49
	add.w	r0, sp, #0	// load ff
	// block (0,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (28,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (42,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1168	// load gg+2*50
	add.w	r0, sp, #0	// load ff
	// block (0,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (28,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (42,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1176	// load gg+2*51
	add.w	r0, sp, #0	// load ff
	// block (0,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (28,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (42,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1184	// load gg+2*52
	add.w	r0, sp, #0	// load ff
	// block (0,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (28,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (42,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1192	// load gg+2*53
	add.w	r0, sp, #0	// load ff
	// block (0,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (28,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (42,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1200	// load gg+2*54
	add.w	r0, sp, #0	// load ff
	// block (0,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (14,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (28,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (42,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1208	// load gg+2*55
	add.w	r0, sp, #0	// load ff
	// block (0,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (14,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (28,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (42,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1216	// load gg+2*56
	add.w	r0, sp, #0	// load ff
	// block (0,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (28,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (42,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (56,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1224	// load gg+2*57
	add.w	r0, sp, #0	// load ff
	// block (0,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (28,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (42,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (56,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1232	// load gg+2*58
	add.w	r0, sp, #0	// load ff
	// block (0,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (28,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (42,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (56,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1240	// load gg+2*59
	add.w	r0, sp, #0	// load ff
	// block (0,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (28,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (42,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (56,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1248	// load gg+2*60
	add.w	r0, sp, #0	// load ff
	// block (0,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (28,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (42,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (56,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1256	// load gg+2*61
	add.w	r0, sp, #0	// load ff
	// block (0,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (14,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (28,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (42,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (56,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1264	// load gg+2*62
	add.w	r0, sp, #0	// load ff
	// block (0,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (14,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (28,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (42,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (56,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1272	// load gg+2*63
	add.w	r0, sp, #0	// load ff
	// block (0,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (28,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (42,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (56,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1280	// load gg+2*64
	add.w	r0, sp, #0	// load ff
	// block (0,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (28,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (42,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (56,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1288	// load gg+2*65
	add.w	r0, sp, #0	// load ff
	// block (0,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (28,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (42,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (56,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1296	// load gg+2*66
	add.w	r0, sp, #0	// load ff
	// block (0,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (28,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (42,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (56,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1304	// load gg+2*67
	add.w	r0, sp, #0	// load ff
	// block (0,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (28,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (42,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (56,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1312	// load gg+2*68
	add.w	r0, sp, #0	// load ff
	// block (0,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (14,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (28,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (42,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (56,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1320	// load gg+2*69
	add.w	r0, sp, #0	// load ff
	// block (0,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (14,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (28,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (42,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (56,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1328	// load gg+2*70
	add.w	r0, sp, #0	// load ff
	// block (0,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (28,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (42,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (56,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (70,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1336	// load gg+2*71
	add.w	r0, sp, #0	// load ff
	// block (0,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (28,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (42,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (56,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (70,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1344	// load gg+2*72
	add.w	r0, sp, #0	// load ff
	// block (0,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (28,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (42,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (56,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (70,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1352	// load gg+2*73
	add.w	r0, sp, #0	// load ff
	// block (0,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (28,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (42,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (56,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (70,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1360	// load gg+2*74
	add.w	r0, sp, #0	// load ff
	// block (0,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (28,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (42,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (56,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (70,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1368	// load gg+2*75
	add.w	r0, sp, #0	// load ff
	// block (0,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (14,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (28,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (42,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (56,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (70,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1376	// load gg+2*76
	add.w	r0, sp, #0	// load ff
	// block (0,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (14,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (28,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (42,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (56,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (70,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1384	// load gg+2*77
	add.w	r0, sp, #0	// load ff
	// block (0,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (28,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (42,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (56,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (70,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1392	// load gg+2*78
	add.w	r0, sp, #0	// load ff
	// block (0,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (28,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (42,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (56,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (70,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1400	// load gg+2*79
	add.w	r0, sp, #0	// load ff
	// block (0,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (28,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (42,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (56,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (70,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1408	// load gg+2*80
	add.w	r0, sp, #0	// load ff
	// block (0,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (28,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (42,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (56,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (70,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1416	// load gg+2*81
	add.w	r0, sp, #0	// load ff
	// block (0,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (28,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (42,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (56,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (70,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1424	// load gg+2*82
	add.w	r0, sp, #0	// load ff
	// block (0,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (14,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (28,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (42,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (56,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (70,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1432	// load gg+2*83
	add.w	r0, sp, #0	// load ff
	// block (0,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (14,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (28,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (42,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (56,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (70,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1440	// load gg+2*84
	add.w	r0, sp, #0	// load ff
	// block (0,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (28,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (42,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (56,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (70,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (84,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1448	// load gg+2*85
	add.w	r0, sp, #0	// load ff
	// block (0,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (28,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (42,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (56,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (70,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (84,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1456	// load gg+2*86
	add.w	r0, sp, #0	// load ff
	// block (0,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (28,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (42,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (56,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (70,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (84,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1464	// load gg+2*87
	add.w	r0, sp, #0	// load ff
	// block (0,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (28,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (42,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (56,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (70,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (84,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1472	// load gg+2*88
	add.w	r0, sp, #0	// load ff
	// block (0,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (28,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (42,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (56,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (70,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (84,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1480	// load gg+2*89
	add.w	r0, sp, #0	// load ff
	// block (0,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (14,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (28,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (42,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (56,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (70,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (84,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1488	// load gg+2*90
	add.w	r0, sp, #0	// load ff
	// block (0,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (14,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (28,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (42,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (56,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (70,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (84,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1496	// load gg+2*91
	add.w	r0, sp, #0	// load ff
	// block (0,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (14,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (28,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (42,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (56,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (70,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (84,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1504	// load gg+2*92
	add.w	r0, sp, #0	// load ff
	// block (0,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (14,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (28,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (42,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (56,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (70,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (84,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1512	// load gg+2*93
	add.w	r0, sp, #0	// load ff
	// block (0,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (14,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (28,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (42,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (56,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (70,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (84,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1520	// load gg+2*94
	add.w	r0, sp, #0	// load ff
	// block (0,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (14,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (28,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (42,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (56,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (70,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (84,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #0	// load ff
	// block (0,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (1,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (2,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (14,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (28,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (42,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (56,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (70,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (84,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,0)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
sch2p19_10:			// decreasing thread length
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #8	// load ff+2*1
	// block (1,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (2,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (3,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (15,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (16,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (29,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (30,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (43,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (44,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (57,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (58,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (71,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (72,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (85,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (86,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,1)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #16	// load ff+2*2
	// block (2,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (3,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (4,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (16,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (17,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (30,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (31,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (44,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (45,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (58,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (59,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (72,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (73,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (86,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (87,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,2)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #24	// load ff+2*3
	// block (3,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (4,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (5,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (17,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (18,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (31,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (32,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (45,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (46,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (59,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (60,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (73,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (74,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (87,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (88,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,3)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #32	// load ff+2*4
	// block (4,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (5,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (6,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (18,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (19,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (32,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (33,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (46,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (47,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (60,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (61,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (74,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (75,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (88,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (89,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,4)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #40	// load ff+2*5
	// block (5,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (6,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (7,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (19,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (20,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (33,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (34,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (47,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (48,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (61,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (62,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (75,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (76,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (89,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (90,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,5)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #48	// load ff+2*6
	// block (6,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (7,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (8,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (20,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (21,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (34,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (35,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (48,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (49,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (62,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (63,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (76,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (77,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (90,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (91,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,6)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #56	// load ff+2*7
	// block (7,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (8,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (9,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (21,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (22,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (35,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (36,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (49,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (50,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (63,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (64,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (77,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (78,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (91,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (92,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,7)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #64	// load ff+2*8
	// block (8,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (9,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (10,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (22,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (23,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (36,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (37,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (50,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (51,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (64,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (65,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (78,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (79,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (92,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (93,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,8)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #72	// load ff+2*9
	// block (9,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (10,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (11,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (23,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (24,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (37,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (38,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (51,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (52,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (65,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (66,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (79,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (80,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (93,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (94,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,9)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #80	// load ff+2*10
	// block (10,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (11,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (12,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (24,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (25,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (38,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (39,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (52,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (53,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (66,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (67,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (80,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (81,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (94,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (95,10)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #88	// load ff+2*11
	// block (11,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (12,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (13,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (25,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (26,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (39,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (40,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (53,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (54,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (67,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (68,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (81,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (82,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (95,11)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #96	// load ff+2*12
	// block (12,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (13,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (14,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (26,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (27,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (40,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (41,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (54,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (55,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (68,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (69,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (82,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (83,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,12)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #104	// load ff+2*13
	// block (13,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (14,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (15,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (27,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (28,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (41,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (42,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (55,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (56,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (69,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (70,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (83,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (84,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,13)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #112	// load ff+2*14
	// block (14,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (15,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (16,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (28,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (42,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (56,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (70,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (84,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,14)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #120	// load ff+2*15
	// block (15,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (16,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (17,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (29,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (30,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (43,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (44,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (57,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (58,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (71,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (72,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (85,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (86,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,15)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #128	// load ff+2*16
	// block (16,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (17,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (18,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (30,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (31,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (44,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (45,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (58,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (59,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (72,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (73,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (86,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (87,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,16)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #136	// load ff+2*17
	// block (17,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (18,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (19,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (31,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (32,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (45,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (46,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (59,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (60,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (73,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (74,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (87,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (88,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,17)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #144	// load ff+2*18
	// block (18,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (19,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (20,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (32,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (33,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (46,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (47,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (60,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (61,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (74,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (75,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (88,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (89,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,18)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #152	// load ff+2*19
	// block (19,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (20,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (21,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (33,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (34,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (47,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (48,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (61,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (62,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (75,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (76,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (89,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (90,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,19)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #160	// load ff+2*20
	// block (20,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (21,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (22,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (34,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (35,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (48,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (49,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (62,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (63,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (76,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (77,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (90,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (91,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,20)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #168	// load ff+2*21
	// block (21,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (22,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (23,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (35,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (36,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (49,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (50,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (63,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (64,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (77,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (78,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (91,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (92,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,21)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #176	// load ff+2*22
	// block (22,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (23,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (24,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (36,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (37,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (50,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (51,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (64,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (65,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (78,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (79,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (92,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (93,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,22)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #184	// load ff+2*23
	// block (23,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (24,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (25,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (37,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (38,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (51,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (52,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (65,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (66,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (79,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (80,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (93,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (94,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,23)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #192	// load ff+2*24
	// block (24,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (25,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (26,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (38,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (39,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (52,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (53,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (66,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (67,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (80,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (81,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (94,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (95,24)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #200	// load ff+2*25
	// block (25,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (26,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (27,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (39,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (40,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (53,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (54,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (67,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (68,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (81,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (82,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (95,25)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #208	// load ff+2*26
	// block (26,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (27,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (28,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (40,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (41,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (54,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (55,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (68,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (69,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (82,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (83,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,26)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #216	// load ff+2*27
	// block (27,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (28,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (29,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (41,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (42,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (55,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (56,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (69,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (70,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (83,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (84,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,27)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #224	// load ff+2*28
	// block (28,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (29,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (30,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (42,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (56,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (70,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (84,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,28)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #232	// load ff+2*29
	// block (29,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (30,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (31,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (43,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (44,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (57,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (58,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (71,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (72,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (85,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (86,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,29)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #240	// load ff+2*30
	// block (30,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (31,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (32,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (44,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (45,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (58,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (59,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (72,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (73,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (86,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (87,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,30)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #248	// load ff+2*31
	// block (31,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (32,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (33,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (45,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (46,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (59,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (60,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (73,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (74,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (87,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (88,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,31)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #256	// load ff+2*32
	// block (32,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (33,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (34,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (46,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (47,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (60,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (61,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (74,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (75,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (88,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (89,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,32)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #264	// load ff+2*33
	// block (33,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (34,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (35,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (47,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (48,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (61,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (62,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (75,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (76,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (89,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (90,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,33)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #272	// load ff+2*34
	// block (34,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (35,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (36,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (48,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (49,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (62,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (63,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (76,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (77,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (90,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (91,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,34)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #280	// load ff+2*35
	// block (35,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (36,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (37,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (49,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (50,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (63,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (64,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (77,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (78,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (91,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (92,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,35)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #288	// load ff+2*36
	// block (36,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (37,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (38,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (50,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (51,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (64,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (65,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (78,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (79,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (92,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (93,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,36)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #296	// load ff+2*37
	// block (37,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (38,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (39,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (51,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (52,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (65,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (66,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (79,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (80,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (93,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (94,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,37)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #304	// load ff+2*38
	// block (38,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (39,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (40,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (52,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (53,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (66,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (67,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (80,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (81,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (94,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (95,38)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #312	// load ff+2*39
	// block (39,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (40,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (41,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (53,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (54,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (67,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (68,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (81,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (82,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (95,39)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #320	// load ff+2*40
	// block (40,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (41,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (42,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (54,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (55,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (68,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (69,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (82,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (83,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,40)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #328	// load ff+2*41
	// block (41,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (42,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (43,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (55,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (56,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (69,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (70,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (83,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (84,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,41)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #336	// load ff+2*42
	// block (42,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (43,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (44,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (56,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (70,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (84,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,42)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #344	// load ff+2*43
	// block (43,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (44,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (45,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (57,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (58,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (71,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (72,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (85,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (86,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,43)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #352	// load ff+2*44
	// block (44,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (45,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (46,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (58,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (59,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (72,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (73,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (86,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (87,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,44)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #360	// load ff+2*45
	// block (45,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (46,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (47,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (59,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (60,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (73,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (74,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (87,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (88,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,45)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #368	// load ff+2*46
	// block (46,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (47,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (48,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (60,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (61,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (74,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (75,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (88,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (89,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,46)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #376	// load ff+2*47
	// block (47,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (48,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (49,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (61,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (62,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (75,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (76,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (89,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (90,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,47)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #384	// load ff+2*48
	// block (48,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (49,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (50,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (62,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (63,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (76,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (77,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (90,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (91,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,48)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #392	// load ff+2*49
	// block (49,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (50,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (51,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (63,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (64,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (77,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (78,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (91,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (92,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,49)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #400	// load ff+2*50
	// block (50,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (51,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (52,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (64,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (65,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (78,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (79,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (92,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (93,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,50)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #408	// load ff+2*51
	// block (51,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (52,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (53,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (65,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (66,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (79,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (80,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (93,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (94,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,51)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #416	// load ff+2*52
	// block (52,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (53,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (54,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (66,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (67,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (80,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (81,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (94,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (95,52)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #424	// load ff+2*53
	// block (53,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (54,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (55,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (67,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (68,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (81,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (82,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (95,53)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #432	// load ff+2*54
	// block (54,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (55,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (56,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (68,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (69,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (82,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (83,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,54)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #440	// load ff+2*55
	// block (55,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (56,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (57,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (69,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (70,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (83,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (84,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,55)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #448	// load ff+2*56
	// block (56,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (57,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (58,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (70,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (84,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,56)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #456	// load ff+2*57
	// block (57,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (58,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (59,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (71,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (72,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (85,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (86,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,57)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #464	// load ff+2*58
	// block (58,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (59,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (60,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (72,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (73,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (86,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (87,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,58)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #472	// load ff+2*59
	// block (59,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (60,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (61,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (73,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (74,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (87,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (88,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,59)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #480	// load ff+2*60
	// block (60,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (61,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (62,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (74,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (75,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (88,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (89,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,60)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #488	// load ff+2*61
	// block (61,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (62,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (63,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (75,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (76,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (89,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (90,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,61)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #496	// load ff+2*62
	// block (62,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (63,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (64,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (76,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (77,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (90,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (91,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,62)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #504	// load ff+2*63
	// block (63,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (64,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (65,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (77,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (78,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (91,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (92,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,63)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #512	// load ff+2*64
	// block (64,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (65,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (66,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (78,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (79,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (92,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (93,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,64)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #520	// load ff+2*65
	// block (65,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (66,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (67,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (79,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (80,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (93,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (94,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,65)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #528	// load ff+2*66
	// block (66,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (67,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (68,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (80,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (81,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (94,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (95,66)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #536	// load ff+2*67
	// block (67,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (68,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (69,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (81,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (82,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (95,67)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #544	// load ff+2*68
	// block (68,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (69,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (70,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (82,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (83,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,68)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #552	// load ff+2*69
	// block (69,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (70,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (71,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (83,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (84,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,69)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #560	// load ff+2*70
	// block (70,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (71,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (72,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (84,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,70)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #568	// load ff+2*71
	// block (71,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (72,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (73,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (85,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (86,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,71)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #576	// load ff+2*72
	// block (72,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (73,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (74,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (86,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (87,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,72)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #584	// load ff+2*73
	// block (73,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (74,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (75,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (87,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (88,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,73)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #592	// load ff+2*74
	// block (74,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (75,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (76,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (88,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (89,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,74)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #600	// load ff+2*75
	// block (75,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (76,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (77,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	s5, r2		// limb 0
	vmov.w	s6, r3		// limb 1
	vmov.w	s7, r4		// limb 2
	vmov.w	s8, r5		// limb 3
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// block (89,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (90,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,75)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s5', 's6', 's7', 's8', 's9', 's10', 's4']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	vmov.w	r9, s8		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s9		// limb 4
	vmov.w	r12, s10		// limb 5
	vmov.w	r8, s4		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #608	// load ff+2*76
	// block (76,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (77,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (78,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	s9, r2		// limb 0
	vmov.w	s10, r3		// limb 1
	vmov.w	s4, r4		// limb 2
	vmov.w	s5, r5		// limb 3
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// block (90,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (91,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,76)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s9', 's10', 's4', 's5', 's6', 's7', 's8']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	vmov.w	r9, s5		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s6		// limb 4
	vmov.w	r12, s7		// limb 5
	vmov.w	r8, s8		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #616	// load ff+2*77
	// block (77,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (78,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (79,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	s6, r2		// limb 0
	vmov.w	s7, r3		// limb 1
	vmov.w	s8, r4		// limb 2
	vmov.w	s9, r5		// limb 3
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// block (91,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (92,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,77)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s6', 's7', 's8', 's9', 's10', 's4', 's5']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	vmov.w	r9, s9		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s10		// limb 4
	vmov.w	r12, s4		// limb 5
	vmov.w	r8, s5		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #624	// load ff+2*78
	// block (78,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (79,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (80,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	s10, r2		// limb 0
	vmov.w	s4, r3		// limb 1
	vmov.w	s5, r4		// limb 2
	vmov.w	s6, r5		// limb 3
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// block (92,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (93,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,78)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s10', 's4', 's5', 's6', 's7', 's8', 's9']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	vmov.w	r9, s6		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s7		// limb 4
	vmov.w	r12, s8		// limb 5
	vmov.w	r8, s9		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #632	// load ff+2*79
	// block (79,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (80,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (81,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	s7, r2		// limb 0
	vmov.w	s8, r3		// limb 1
	vmov.w	s9, r4		// limb 2
	vmov.w	s10, r5		// limb 3
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// block (93,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (94,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,79)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s7', 's8', 's9', 's10', 's4', 's5', 's6']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	vmov.w	r9, s10		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s4		// limb 4
	vmov.w	r12, s5		// limb 5
	vmov.w	r8, s6		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #640	// load ff+2*80
	// block (80,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (81,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (82,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	s4, r2		// limb 0
	vmov.w	s5, r3		// limb 1
	vmov.w	s6, r4		// limb 2
	vmov.w	s7, r5		// limb 3
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// block (94,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (95,80)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s4', 's5', 's6', 's7', 's8', 's9', 's10']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	vmov.w	r9, s7		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s8		// limb 4
	vmov.w	r12, s9		// limb 5
	vmov.w	r8, s10		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #648	// load ff+2*81
	// block (81,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (82,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (83,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r2-r8 to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	s8, r2		// limb 0
	vmov.w	s9, r3		// limb 1
	vmov.w	s10, r4		// limb 2
	vmov.w	s4, r5		// limb 3
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// block (95,81)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate to ['s8', 's9', 's10', 's4', 's5', 's6', 's7']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	vmov.w	r9, s4		// limb 3
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	add.w	r5, r5, r9
	vmov.w	r10, s5		// limb 4
	vmov.w	r12, s6		// limb 5
	vmov.w	r8, s7		// limb 6
	add.w	r6, r6, r10
	add.w	r7, r7, r12
	add.w	r8, r8, r11, asr #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #656	// load ff+2*82
	// block (82,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (83,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (84,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,82)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #664	// load ff+2*83
	// block (83,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (84,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (85,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,83)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #672	// load ff+2*84
	// block (84,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (85,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (86,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,84)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #680	// load ff+2*85
	// block (85,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (86,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (87,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,85)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #688	// load ff+2*86
	// block (86,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (87,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (88,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,86)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #696	// load ff+2*87
	// block (87,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (88,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (89,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,87)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #704	// load ff+2*88
	// block (88,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (89,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (90,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,88)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s5', 's6', 's7']
	vmov.w	s5, r6		// limb 4
	vmov.w	s6, r7		// limb 5
	vmov.w	s7, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #712	// load ff+2*89
	// block (89,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (90,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (91,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,89)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s5', 's6', 's7']
	vmov.w	r10, s5		// limb 0
	vmov.w	r12, s6		// limb 1
	vmov.w	r14, s7		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s9', 's10', 's4']
	vmov.w	s9, r6		// limb 4
	vmov.w	s10, r7		// limb 5
	vmov.w	s4, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #720	// load ff+2*90
	// block (90,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (91,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (92,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,90)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s9', 's10', 's4']
	vmov.w	r10, s9		// limb 0
	vmov.w	r12, s10		// limb 1
	vmov.w	r14, s4		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s6', 's7', 's8']
	vmov.w	s6, r6		// limb 4
	vmov.w	s7, r7		// limb 5
	vmov.w	s8, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #728	// load ff+2*91
	// block (91,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (92,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (93,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,91)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s6', 's7', 's8']
	vmov.w	r10, s6		// limb 0
	vmov.w	r12, s7		// limb 1
	vmov.w	r14, s8		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s10', 's4', 's5']
	vmov.w	s10, r6		// limb 4
	vmov.w	s4, r7		// limb 5
	vmov.w	s5, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #736	// load ff+2*92
	// block (92,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (93,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (94,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,92)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s10', 's4', 's5']
	vmov.w	r10, s10		// limb 0
	vmov.w	r12, s4		// limb 1
	vmov.w	r14, s5		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s7', 's8', 's9']
	vmov.w	s7, r6		// limb 4
	vmov.w	s8, r7		// limb 5
	vmov.w	s9, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #744	// load ff+2*93
	// block (93,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (94,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	// block (95,93)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s7', 's8', 's9']
	vmov.w	r10, s7		// limb 0
	vmov.w	r12, s8		// limb 1
	vmov.w	r14, s9		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s4', 's5', 's6']
	vmov.w	s4, r6		// limb 4
	vmov.w	s5, r7		// limb 5
	vmov.w	s6, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #752	// load ff+2*94
	// block (94,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	// block (95,94)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smlal	r6, r7, r2, r4
	smlal.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smlal.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s4', 's5', 's6']
	vmov.w	r10, s4		// limb 0
	vmov.w	r12, s5		// limb 1
	vmov.w	r14, s6		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	// store r6-r8 to ['s8', 's9', 's10']
	vmov.w	s8, r6		// limb 4
	vmov.w	s9, r7		// limb 5
	vmov.w	s10, r8		// limb 6
	// compress and store r2-r5
	vmov.w	r6, s3		// reload cursor
	mov.w	r7, #4591	// load q
	vmov.w	r8, s11		// load round(-2^32/q)
	br_32x2	r2, r3, r7, r8, r9
	br_32x2	r4, r5, r7, r8, r9
	str.w	r2, [r6], #4
	str.w	r4, [r6], #4
	vmov.w	s3, r6		// store cursor
	add.w	r1, sp, #1528	// load gg+2*95
	add.w	r0, sp, #760	// load ff+2*95
	// block (95,95)
	ldr.w	r3, [r0, #4]
	ldr.w	r2, [r0], #8
	ldr.w	r5, [r1, #4]
	ldr.w	r4, [r1], #-8
 	smull	r6, r7, r2, r4
	smull.w	r8, r9, r2, r5
	smlal.w	r8, r9, r3, r4
	smull.w	r10, r11, r3, r5
	//r6-7/r8-9/r10-11 are partial accumulators
	//cut out 19b pieces put in r2-r8
	sbfx.w	r2, r6, #0, #19
	mov.w	r12, #-1
	smlal.w	r6, r7, r12, r2
	sbfx.w	r3, r7, #0, #6
	sub.w	r7, r7, r3
	lsl.w	r3, r3, #13
	add.w	r3, r3, r6, LSR #19
	sbfx.w	r5, r8, #0, #19
	add.w	r4, r5, r7, ASR #6
	smlal.w	r8, r9, r12, r5
	sbfx.w	r5, r9, #0, #6
	sub.w	r9, r9, r5
	lsl.w	r5, r5, #13
	add.w	r5, r5, r8, LSR #19
	sbfx.w	r7, r10, #0, #19
	add.w	r6, r7, r9, ASR #6
	smlal.w	r10, r11, r12, r7
	sbfx.w	r7, r11, #0, #6
	sub.w	r11, r11, r7
	lsl.w	r7, r7, #13
	add.w	r7, r7, r10, LSR #19
	// accumulate r2-r4 to ['s8', 's9', 's10']
	vmov.w	r10, s8		// limb 0
	vmov.w	r12, s9		// limb 1
	vmov.w	r14, s10		// limb 2
	add.w	r2, r2, r10
	add.w	r3, r3, r12
	add.w	r4, r4, r14
	asr.w	r8, r11, #6
	mov.w	r9, #4591	// load q
	vmov.w	r10, s11		// load round(-2^32/q)
	// compress and store r2-r8
	br_32x2	r2, r3, r9, r10, r11
	br_32x2	r4, r5, r9, r10, r11
	br_32x2	r6, r7, r9, r10, r11
	br_32	r8, r9, r10, r11
	uxth.w	r8, r8
	vmov.w	r11, s3		// reload cursor
	str.w	r2, [r11], #4
	str.w	r4, [r11], #4
	str.w	r6, [r11], #4
	str.w	r8, [r11], #4
	vmov.w	s3, r11		// store cursor
sch2p19_20:			// mv hh back to h
	vmov.w	r0, s0		// reload h
	vmov.w	r1, s2		// reload f
	vmov.w	r2, s1		// reload g

	add.w	sp, sp, #1536	// sp += 4N
	pop.w	{r4-r11,lr}
	bx	lr
	nop
